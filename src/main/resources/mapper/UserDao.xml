<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wl.college.dao.UserDao">

    <!--user表基础sql片段-->
    <sql id="Base_Column_List" >
        id, name, referral_code, password, salt, mail, phone, full_name, country, city, address,
        id_card, id_card_front, id_card_back, id_card_with, pid, pids, state, create_time,
        update_time, bank_card, bank_card_front, bank_card_back, bank_card_state, id_card_state,
        birthdate, gender, dept_id, sign_in_day, last_sign_in
    </sql>

    <sql id="Role_List" >
        id, role, description, available, create_time, update_time
    </sql>

    <!--根据唯一标记获取客户-->
    <select id="getUserByTag" resultType="com.wl.college.entity.User">
        SELECT
        <include refid="Base_Column_List" />
        FROM user
        WHERE 1=1
        <if test="id != null" >
            AND id = #{id,jdbcType=INTEGER}
        </if>
        <if test="email != null" >
            AND email = #{email,jdbcType=VARCHAR}
        </if>
        <if test="phone != null" >
            AND phone = #{phone,jdbcType=VARCHAR}
        </if>
        <if test="idCard != null" >
            AND idCard = #{idCard,jdbcType=VARCHAR}
        </if>
    </select>

    <!--查找user所拥有的角色-->
    <select id="hasRoles" resultType="com.wl.college.entity.Role">
        SELECT
        <include refid="Role_List" />
        FROM role r
        JOIN user_role ur ON r.id=ur.role_id
        JOIN user u ON ur.user_id=u.id
        WHERE 1=1
        <if test="id != null" >
            AND id = #{id,jdbcType=INTEGER}
        </if>
        <if test="email != null" >
            AND email = #{email,jdbcType=VARCHAR}
        </if>
        <if test="phone != null" >
            AND phone = #{phone,jdbcType=VARCHAR}
        </if>
        <if test="idCard != null" >
            AND idCard = #{idCard,jdbcType=VARCHAR}
        </if>
    </select>

    <!-- 插入并返回自增ID -->
    <insert id="createUser" useGeneratedKeys="true" keyProperty="user.id">
        INSERT INTO user (name, password, mail, phone,full_name,country,city,address,id_card,id_card_front,id_card_back,
        id_card_with,bank_card,pid,pids,bank_card_front,bank_card_back,birthdate,gender,dept_id)
        VALUES (#{user.name},#{user.password},#{user.mail},#{user.phone},#{user.fullName},#{user.country},#{user.city},
        #{user.address},#{user.idCard},#{user.idCardFront},#{user.idCardBack},#{user.idCardWith},#{user.bankCard},
        #{user.pid},#{user.pids},#{user.bankCardFront},#{user.bankCardBack},#{user.birthdate},#{user.gender},#{user.deptId})
    </insert>


    <update id="updateDept">
        UPDATE user
        SET dept_id = #{deptId}
        WHERE id = #{userId}
    </update>
</mapper>